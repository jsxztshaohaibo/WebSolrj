模板方法模式：
	
	-----servlet中 的service方法就是模板方法， doGet() doPost()等就是业务步骤

	适应于实现过程中， 业务步骤明确（第一步做什么，第二部做什么，第三步做什么）的业务场景：
	
模板方法模式的实现要素：1.抽象基类(不是接口) 2.具体子类。
	父类中调用多个步骤的模板方法要用 public final 修饰，禁止继承实现
	
	固定不变的实现方法在 抽象类里 用    private  修饰统一实现，禁止继承实现
	
	具体的个性化的实现，延迟到 之类里各自实现，用 abstract 修饰

事例中使用"冰箱装大象“的场景来说明

冰箱装大象， 按照宋丹丹的理论是： ----抽象基类

前戏：旁白喊开始                   ----固定不变的实现  private 修饰改方法

第一步：冰箱门打开；        ----需要之类自己实现
第二步：把大象放进去；   ----需要之类自己实现
第三步：冰箱门关上；        ----需要之类自己实现

结尾：旁白喊结束                   ----固定不变的实现  private 修饰改方法


但是每一步其他人的实现可能不同：

诸葛亮的具体实现：                                   -----具体子类
第一步：温文儒雅的把冰箱门打开；
第二步：温文儒雅的把大象放进去；
第三步：温文儒雅的把冰箱门关上；


张飞的具体实现：                                       ------具体子类
第一步：叫喊着粗鲁的把冰箱门打开；
第二步：叫喊着粗鲁的把大象放进去；
第三步：叫喊着粗鲁的把冰箱门关上；

还可以在执行步骤之间， 增加一个钩子方法，来决定是否执行哪个步骤，挂不挂钩子，由子类自己决定
比如：
装大象前 要不要前戏

张飞比较急躁，不要前戏直接就开始装（需要重写钩子方法）
诸葛亮比较沉稳，就说按照规定来(模板方法中定义的)（不需要重写钩子方法，直接继承过来，或者不用显示继承）
